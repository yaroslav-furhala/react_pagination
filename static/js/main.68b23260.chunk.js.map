{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","total","perPage","currentPage","onPageChange","numberOfItems","Math","ceil","isSelectedFirst","isSelectedLast","className","classNames","disabled","href","onClick","Array","from","keys","slice","map","num","active","items","to","numbers","n","push","getNumbers","App","useState","itemsPerPage","setItemsPerPage","selectedPage","setSelectedPage","visibleItemsStart","visibleItemsEnd","length","id","value","onChange","event","target","htmlFor","page","item","ReactDOM","render","document","getElementById"],"mappings":"kNAUaA,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAgBC,KAAKC,KAAKN,EAAQC,GAClCM,EAAkC,IAAhBL,EAClBM,EAAiBN,IAAgBE,EAEvC,OACE,qBAAIK,UAAU,aAAd,UACE,oBAAIA,UAAWC,IACb,YACA,CACEC,SAAUJ,IAHd,SAOE,mBACE,UAAQ,WACRE,UAAU,YACVG,KAAK,QACL,gBAAeL,EACfM,QAAS,kBAAMV,EAAaD,EAAc,IAL5C,oBAWDY,MAAMC,KAAKD,MAAMV,EAAgB,GAAGY,QAAQC,MAAM,GAAGC,KAAI,SAAAC,GAAG,OAC3D,oBACEV,UAAWC,IACT,YACA,CACEU,OAAQD,IAAQjB,IAJtB,SASE,mBACE,UAAQ,WACRO,UAAU,YACVG,KAAI,WAAMO,GACVN,QAAS,kBAAMV,EAAagB,IAJ9B,SAMGA,KAREA,MAaT,oBAAIV,UAAWC,IACb,YACA,CACEC,SAAUH,IAHd,SAOE,mBACE,UAAQ,WACRC,UAAU,YACVG,KAAK,QACL,gBAAeJ,EACfK,QAAS,kBAAMV,EAAaD,EAAc,IAL5C,wBC/DR,IAAMmB,ECLC,SAAoBN,EAAcO,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIT,EAAMS,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,EDFKG,CAAW,EAAG,IAAIR,KAAI,SAAAM,GAAC,qBAAYA,MAEpCG,EAAgB,WAC3B,MAAwCC,mBAAS,GAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAAwCF,mBAAS,GAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KAEMC,EAAoBJ,GAAgBE,EAAe,GAAK,EACxDG,EAAmBD,EAAoBJ,EAAe,EAAIR,EAAMc,OAClEd,EAAMc,OACNF,EAAoBJ,EAAe,EAevC,OACE,sBAAKpB,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWsB,EADX,mBACkCE,EADlC,cACyDC,EADzD,eAC+Eb,EAAMc,OADrF,OAIA,sBAAK1B,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACR2B,GAAG,kBACH3B,UAAU,eACV4B,MAAOR,EACPS,SA5BiB,SAACC,GAC1BT,GAAiBS,EAAMC,OAAOH,OAC9BL,EAAgB,IAqBV,UAOE,wBAAQK,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAGJ,uBAAOI,QAAQ,kBAAkBhC,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACET,MAAOqB,EAAMc,OACblC,QAAS4B,EACT3B,YAAa6B,EACb5B,aAxCmB,SAACuC,GACpBA,IAASX,GAIbC,EAAgBU,MAsCd,6BACGrB,EAAMJ,MAAMgB,EAAoB,EAAGC,GAAiBhB,KAAI,SAAAyB,GAAI,OAC3D,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,YE/DnBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.68b23260.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\n\ntype Props = {\n  total: number,\n  perPage: number,\n  currentPage: number,\n  onPageChange: (page: number) => void,\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const numberOfItems = Math.ceil(total / perPage);\n  const isSelectedFirst = currentPage === 1;\n  const isSelectedLast = currentPage === numberOfItems;\n\n  return (\n    <ul className=\"pagination\">\n      <li className={classNames(\n        'page-item',\n        {\n          disabled: isSelectedFirst,\n        },\n      )}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={isSelectedFirst}\n          onClick={() => onPageChange(currentPage - 1)}\n        >\n          «\n        </a>\n      </li>\n\n      {Array.from(Array(numberOfItems + 1).keys()).slice(1).map(num => (\n        <li\n          className={classNames(\n            'page-item',\n            {\n              active: num === currentPage,\n            },\n          )}\n          key={num}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${num}`}\n            onClick={() => onPageChange(num)}\n          >\n            {num}\n          </a>\n        </li>\n      ))}\n\n      <li className={classNames(\n        'page-item',\n        {\n          disabled: isSelectedLast,\n        },\n      )}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={isSelectedLast}\n          onClick={() => onPageChange(currentPage + 1)}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\nimport { getNumbers } from './utils';\n\nconst items = getNumbers(1, 42).map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [itemsPerPage, setItemsPerPage] = useState(3);\n  const [selectedPage, setSelectedPage] = useState(1);\n\n  const visibleItemsStart = itemsPerPage * (selectedPage - 1) + 1;\n  const visibleItemsEnd = (visibleItemsStart + itemsPerPage - 1 > items.length)\n    ? items.length\n    : visibleItemsStart + itemsPerPage - 1;\n\n  const handleSelectChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setItemsPerPage(+event.target.value);\n    setSelectedPage(1);\n  };\n\n  const handlePageSelect = (page: number) => {\n    if (page === selectedPage) {\n      return;\n    }\n\n    setSelectedPage(page);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${selectedPage} (items ${visibleItemsStart} - ${visibleItemsEnd} of ${items.length})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={itemsPerPage}\n            onChange={handleSelectChange}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={items.length}\n        perPage={itemsPerPage}\n        currentPage={selectedPage}\n        onPageChange={handlePageSelect}\n      />\n\n      <ul>\n        {items.slice(visibleItemsStart - 1, visibleItemsEnd).map(item => (\n          <li key={item} data-cy=\"item\">{item}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}